# -*- encoding: utf-8 -*-
##############################################################################
#
# OpenERP, Open Source Management Solution
# Copyright (c) 2014 KIDDYS HOUSE SAC. (http://kiddyshouse.com).
#
# WARNING: This program as such is intended to be used by professional
# programmers who take the whole responsability of assessing all potential
# consequences resulting from its eventual inadequacies and bugs
# End users who are looking for a ready-to-use solution with commercial
# garantees and support are strongly adviced to contract a Free Software
# Service Company
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##############################################################################

from osv import osv, fields
import urllib2
import urllib
import cookielib
import re

import logging
_logger = logging.getLogger(__name__)


def get_url(url):
    """Return a string of a get url query"""
    try:
        import urllib
        objfile = urllib.urlopen(url)
        rawfile = objfile.read()
        objfile.close()
        return rawfile
    except ImportError:
        raise Exception ('Error: Unable to import urllib !')
    except IOError:
        raise Exception ('Error: Web Service [%s] does not exist or it is non accesible !' % url)

class res_partner(osv.osv):
    _name= 'res.partner'
    _inherit = 'res.partner'
    _columns = {
        'doc_type': fields.selection([('1','DOCUMENTO NACIONAL DE IDENTIDAD (DNI)'),('6','REGISTRO ÚNICO DE CONTRIBUYENTES'),('4','CARNET DE EXTRANJERIA'),('7','PASAPORTE'),('A','CÉDULA DIPLOMÁTICA DE IDENTIDAD'),('0','OTROS TIPOS DE DOCUMENTOS')],'Tipo Doc. Indentidad',required=False,),
        'doc_number': fields.char('Numero Doc. Indentidad',size=32),
        'apellidopaterno': fields.char('Apellido paterno', size=64),
        'apellidomaterno': fields.char('Apellido materno', size=64),
        'nombres': fields.char('Nombres', size=64),
        'codigo_reg_sunat_reniec':fields.char('Codigo', size=4),
    }

    _defaults = {
        'doc_type': '1',
    }

    def onchange_type(self, cr, uid, ids, is_company, doc_type, context=None):
        value = {}
        value['title'] = False
        if is_company:
            domain = {'title': [('domain', '=', 'partner')]}
            value['doc_type'] = '6'
            value['apellidopaterno'] = False
            value['apellidomaterno'] = False
            value['nombres'] = False
        else:
            domain = {'title': [('domain', '=', 'contact')]}
            value['doc_type'] = '1'
        return {'value': value, 'domain': domain}

    def onchange_doc_number(self, cr, uid, ids, doc_type, doc_number, is_company, context=None):
        #response = urllib2.urlopen('http://www.sunat.gob.pe/w/wapS01Alias?ruc=20514540145')
        #html = response.read()
        #url='http://www.sunat.gob.pe/w/wapS01Alias?ruc=20553291501'
        #_logger.error("DOC_TUY: %r", doc_number)
        #str1 = raw_input("NGRESO CODIGO:")
        #_logger.error("DOC_TUY: %r", str1)
        res = {'value':{}}
        if doc_number:
            if doc_type in ('6') and len(doc_number) == 11:
                url="http://www.sunat.gob.pe/w/wapS01Alias?ruc="+doc_number
                data = get_url(url)

                res_empres = re.findall('''<small><b>N&#xFA;mero Ruc. </b> \d+ - .* <br/></small>''', data)
                for d in res_empres:
                    name_empresa =  (d[46:-14])
                    #_logger.error("WEB: %r", name_empresa)
                    import HTMLParser
                    hparser=HTMLParser.HTMLParser()
                    res['value']['name'] = hparser.unescape(hparser.unescape(name_empresa.decode('latin_1')))
        
                res_direcc = re.findall('''<small><b>Direcci&#xF3;n.</b><br/>.*</small><br/>''', data)
                for d in res_direcc:
                    direccion =  (d[34:-13])
                    import HTMLParser
                    hparser=HTMLParser.HTMLParser()
                    res['value']['street'] = hparser.unescape(hparser.unescape(direccion.decode('latin_1')))                 
                return res
            elif doc_type in ('1') and len(doc_number) == 8:
                return res
            else:
                res['value']['street'] = False
                res['value']['name'] = False
                #res['value']['doc_number'] = False
                return res
        else:
            #res['value']['street'] = False
            #res['value']['name'] = False
            #res['value']['doc_number'] = False
            return res


    def onchange_cod(self, cr, uid, ids, doc_type, doc_number, is_company, context=None):
#https://cel.reniec.gob.pe/valreg/valreg.do

#POST /valreg/valreg.do HTTP/1.1
#Host: cel.reniec.gob.pe
#User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:28.0) Gecko/20100101 Firefox/28.0
#Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
#Accept-Language: es-ar,es;q=0.8,en-us;q=0.5,en;q=0.3
#Accept-Encoding: gzip, deflate
#Referer: https://cel.reniec.gob.pe/valreg/valreg.do
#Cookie: JSESSIONID=97657851ce5e6a5a2f19f134633a20092097c8d39ad.mALvn6iL-B9zpAzzmMTBpQ8Iq6iUaNaKahD3lN4PagSLa34Iah8K-xuL-AeSa69zaMSLa6aPa64Obh0QawSHc30Ka2bEaAjzawTwp65ynh4IqAjIokjx-ArJmwTKngaLc3iPaN8Sax8xf2bQmkLMnkqxn6jAmljGr5XDqQLvpAe_
#Connection: keep-alive
#Content-Type: application/x-www-form-urlencoded
#Content-Length: 178
#accion=buscar&tecla_7=2&tecla_8=6&tecla_9=8&tecla_4=9&tecla_5=5&tecla_6=7&tecla_1=1&tecla_2=3&tecla_3=0&tecla_0=4&nuDni=42995230&imagen=R6R2&bot_consultar.x=85&bot_consultar.y=14

#--------     
#Host: cel.reniec.gob.pe
#User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:28.0) Gecko/20100101 Firefox/28.0
#Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
#Accept-Language: es-ar,es;q=0.8,en-us;q=0.5,en;q=0.3
#Accept-Encoding: gzip, deflate
#Referer: https://cel.reniec.gob.pe/valreg/valreg.do
#Cookie: JSESSIONID=97657851ce5e6a5a2f19f134633a20092097c8d39ad.mALvn6iL-B9zpAzzmMTBpQ8Iq6iUaNaKahD3lN4PagSLa34Iah8K-xuL-AeSa69zaMSLa6aPa64Obh0QawSHc30Ka2bEaAjzawTwp65ynh4IqAjIokjx-ArJmwTKngaLc3iPaN8Sax8xf2bQmkLMnkqxn6jAmljGr5XDqQLvpAe_
#Connection: keep-alive
#Content-Type: application/x-www-form-urlencoded
#Content-Length: 178

#accion=buscar&tecla_7=2&tecla_8=6&tecla_9=8&tecla_4=9&tecla_5=5&tecla_6=7&tecla_1=1&tecla_2=3&tecla_3=0&tecla_0=4&nuDni=42995230&imagen=R6R2&bot_consultar.x=85&bot_consultar.y=14
#--------

        #Inicializamos un objeto que nos servira para poder abrir conexiones con una pagina 
        #y poder guardar las cookies que nos mande esta pagina
        opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cookielib.CookieJar()))
        opener.open("https://cel.reniec.gob.pe/valreg/valreg.do")
        micookie = None
        for num, cookie in enumerate(cookie_j):
            #print cookie.name + ": "+ cookie.value
            micookie = cookie.value

        ###---Para que se guarden las cookies que manda HTTP utilizamos el manejador HTTPCookieProcessor---####
        cookie_h = urllib2.HTTPCookieProcessor()
        opener = urllib2.build_opener(cookie_h)
        urllib2.install_opener(opener)
        f = urllib2.urlopen("https://cel.reniec.gob.pe/valreg/valreg.do")
        print f.read()
        
        web=raw_input("Web es http://")
        userAgent = 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:28.0) Gecko/20100101 Firefox/28.0'

        headers = { 'User-Agent' : userAgent }
        req = urllib2.Request("https://cel.reniec.gob.pe/valreg/valreg.do", None, headers)
        response = urllib2.urlopen(req)
        print response.read()
        response.close()
        conexion = opener.open('http://url/to/login',data)
    
    
    def onchange_doc_type(self, cr, uid, ids, doc_type, doc_number, is_company, context=None):
        value = {}
        #value['doc_number'] = False
        value['name'] = False
        #value['street'] = False

        #if doc_type in ('6'):
        #    value['is_company'] = True
        #if doc_type in ('1'):
        #    value['is_company'] = True

        return {'value': value}

    def onchange_person(self, cr, uid, ids, name, nombres, apellidopaterno, apellidomaterno, context=None):
        res = {'value':{}}
        res['value']['name'] = (nombres and (nombres+' ') or '') + (apellidopaterno and (apellidopaterno+' ') or '') + (apellidomaterno and (apellidomaterno+' ') or '')
        return res
